// This service provide statistic info about changing currency
// gRPC && REST

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: api/statApp.proto

package pkg

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SumMonth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Month  string  `protobuf:"bytes,1,opt,name=month,proto3" json:"month,omitempty"`
	SumGas float64 `protobuf:"fixed64,2,opt,name=sumGas,proto3" json:"sumGas,omitempty"`
}

func (x *SumMonth) Reset() {
	*x = SumMonth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_statApp_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SumMonth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SumMonth) ProtoMessage() {}

func (x *SumMonth) ProtoReflect() protoreflect.Message {
	mi := &file_api_statApp_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SumMonth.ProtoReflect.Descriptor instead.
func (*SumMonth) Descriptor() ([]byte, []int) {
	return file_api_statApp_proto_rawDescGZIP(), []int{0}
}

func (x *SumMonth) GetMonth() string {
	if x != nil {
		return x.Month
	}
	return ""
}

func (x *SumMonth) GetSumGas() float64 {
	if x != nil {
		return x.SumGas
	}
	return 0
}

type GasAvg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time        string  `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	GasPriceAvg float64 `protobuf:"fixed64,2,opt,name=gasPriceAvg,proto3" json:"gasPriceAvg,omitempty"`
}

func (x *GasAvg) Reset() {
	*x = GasAvg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_statApp_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GasAvg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GasAvg) ProtoMessage() {}

func (x *GasAvg) ProtoReflect() protoreflect.Message {
	mi := &file_api_statApp_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GasAvg.ProtoReflect.Descriptor instead.
func (*GasAvg) Descriptor() ([]byte, []int) {
	return file_api_statApp_proto_rawDescGZIP(), []int{1}
}

func (x *GasAvg) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *GasAvg) GetGasPriceAvg() float64 {
	if x != nil {
		return x.GasPriceAvg
	}
	return 0
}

type HourDistribution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hour      string                       `protobuf:"bytes,1,opt,name=hour,proto3" json:"hour,omitempty"`
	Statistic []*HourDistribution_TimeStat `protobuf:"bytes,2,rep,name=statistic,proto3" json:"statistic,omitempty"`
}

func (x *HourDistribution) Reset() {
	*x = HourDistribution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_statApp_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HourDistribution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HourDistribution) ProtoMessage() {}

func (x *HourDistribution) ProtoReflect() protoreflect.Message {
	mi := &file_api_statApp_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HourDistribution.ProtoReflect.Descriptor instead.
func (*HourDistribution) Descriptor() ([]byte, []int) {
	return file_api_statApp_proto_rawDescGZIP(), []int{2}
}

func (x *HourDistribution) GetHour() string {
	if x != nil {
		return x.Hour
	}
	return ""
}

func (x *HourDistribution) GetStatistic() []*HourDistribution_TimeStat {
	if x != nil {
		return x.Statistic
	}
	return nil
}

type ResponseStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sum          float64             `protobuf:"fixed64,1,opt,name=sum,proto3" json:"sum,omitempty"`
	SumMonths    []*SumMonth         `protobuf:"bytes,2,rep,name=sumMonths,proto3" json:"sumMonths,omitempty"`
	DayPriceAvg  []*GasAvg           `protobuf:"bytes,3,rep,name=dayPriceAvg,proto3" json:"dayPriceAvg,omitempty"`
	Distribution []*HourDistribution `protobuf:"bytes,4,rep,name=distribution,proto3" json:"distribution,omitempty"`
}

func (x *ResponseStat) Reset() {
	*x = ResponseStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_statApp_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseStat) ProtoMessage() {}

func (x *ResponseStat) ProtoReflect() protoreflect.Message {
	mi := &file_api_statApp_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseStat.ProtoReflect.Descriptor instead.
func (*ResponseStat) Descriptor() ([]byte, []int) {
	return file_api_statApp_proto_rawDescGZIP(), []int{3}
}

func (x *ResponseStat) GetSum() float64 {
	if x != nil {
		return x.Sum
	}
	return 0
}

func (x *ResponseStat) GetSumMonths() []*SumMonth {
	if x != nil {
		return x.SumMonths
	}
	return nil
}

func (x *ResponseStat) GetDayPriceAvg() []*GasAvg {
	if x != nil {
		return x.DayPriceAvg
	}
	return nil
}

func (x *ResponseStat) GetDistribution() []*HourDistribution {
	if x != nil {
		return x.Distribution
	}
	return nil
}

type HourDistribution_TimeStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Price string `protobuf:"bytes,1,opt,name=price,proto3" json:"price,omitempty"`
	Count int32  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *HourDistribution_TimeStat) Reset() {
	*x = HourDistribution_TimeStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_statApp_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HourDistribution_TimeStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HourDistribution_TimeStat) ProtoMessage() {}

func (x *HourDistribution_TimeStat) ProtoReflect() protoreflect.Message {
	mi := &file_api_statApp_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HourDistribution_TimeStat.ProtoReflect.Descriptor instead.
func (*HourDistribution_TimeStat) Descriptor() ([]byte, []int) {
	return file_api_statApp_proto_rawDescGZIP(), []int{2, 0}
}

func (x *HourDistribution_TimeStat) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *HourDistribution_TimeStat) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_api_statApp_proto protoreflect.FileDescriptor

var file_api_statApp_proto_rawDesc = []byte{
	0x0a, 0x11, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x41, 0x70, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x74, 0x61, 0x74, 0x41, 0x70, 0x70, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x38, 0x0a, 0x08, 0x53, 0x75, 0x6d, 0x4d, 0x6f,
	0x6e, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x6d,
	0x47, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x73, 0x75, 0x6d, 0x47, 0x61,
	0x73, 0x22, 0x3e, 0x0a, 0x06, 0x47, 0x61, 0x73, 0x41, 0x76, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x67, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x41, 0x76, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x67, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x41, 0x76,
	0x67, 0x22, 0xa0, 0x01, 0x0a, 0x10, 0x48, 0x6f, 0x75, 0x72, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x75, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x75, 0x72, 0x12, 0x40, 0x0a, 0x09, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x73, 0x74, 0x61, 0x74, 0x41, 0x70, 0x70, 0x2e, 0x48, 0x6f, 0x75, 0x72, 0x44, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x1a, 0x36, 0x0a, 0x08,
	0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0xc3, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x03, 0x73, 0x75, 0x6d, 0x12, 0x2f, 0x0a, 0x09, 0x73, 0x75, 0x6d, 0x4d, 0x6f,
	0x6e, 0x74, 0x68, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x74, 0x61,
	0x74, 0x41, 0x70, 0x70, 0x2e, 0x53, 0x75, 0x6d, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x52, 0x09, 0x73,
	0x75, 0x6d, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x73, 0x12, 0x31, 0x0a, 0x0b, 0x64, 0x61, 0x79, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x41, 0x76, 0x67, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x73, 0x74, 0x61, 0x74, 0x41, 0x70, 0x70, 0x2e, 0x47, 0x61, 0x73, 0x41, 0x76, 0x67, 0x52, 0x0b,
	0x64, 0x61, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x41, 0x76, 0x67, 0x12, 0x3d, 0x0a, 0x0c, 0x64,
	0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x41, 0x70, 0x70, 0x2e, 0x48, 0x6f, 0x75, 0x72,
	0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x64, 0x69,
	0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x65, 0x0a, 0x0e, 0x53, 0x74,
	0x61, 0x74, 0x41, 0x70, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x53, 0x0a, 0x07,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x15, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x41, 0x70, 0x70, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11,
	0x2f, 0x73, 0x74, 0x61, 0x74, 0x2f, 0x64, 0x61, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x41, 0x76,
	0x67, 0x42, 0x21, 0x5a, 0x1f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x4d, 0x61, 0x74, 0x68, 0x50, 0x6f, 0x65, 0x6d, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x41, 0x70, 0x70,
	0x2f, 0x70, 0x6b, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_statApp_proto_rawDescOnce sync.Once
	file_api_statApp_proto_rawDescData = file_api_statApp_proto_rawDesc
)

func file_api_statApp_proto_rawDescGZIP() []byte {
	file_api_statApp_proto_rawDescOnce.Do(func() {
		file_api_statApp_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_statApp_proto_rawDescData)
	})
	return file_api_statApp_proto_rawDescData
}

var file_api_statApp_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_api_statApp_proto_goTypes = []interface{}{
	(*SumMonth)(nil),                  // 0: statApp.SumMonth
	(*GasAvg)(nil),                    // 1: statApp.GasAvg
	(*HourDistribution)(nil),          // 2: statApp.HourDistribution
	(*ResponseStat)(nil),              // 3: statApp.ResponseStat
	(*HourDistribution_TimeStat)(nil), // 4: statApp.HourDistribution.TimeStat
	(*emptypb.Empty)(nil),             // 5: google.protobuf.Empty
}
var file_api_statApp_proto_depIdxs = []int32{
	4, // 0: statApp.HourDistribution.statistic:type_name -> statApp.HourDistribution.TimeStat
	0, // 1: statApp.ResponseStat.sumMonths:type_name -> statApp.SumMonth
	1, // 2: statApp.ResponseStat.dayPriceAvg:type_name -> statApp.GasAvg
	2, // 3: statApp.ResponseStat.distribution:type_name -> statApp.HourDistribution
	5, // 4: statApp.StatAppService.GetStat:input_type -> google.protobuf.Empty
	3, // 5: statApp.StatAppService.GetStat:output_type -> statApp.ResponseStat
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_api_statApp_proto_init() }
func file_api_statApp_proto_init() {
	if File_api_statApp_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_statApp_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SumMonth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_statApp_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GasAvg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_statApp_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HourDistribution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_statApp_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_statApp_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HourDistribution_TimeStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_statApp_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_statApp_proto_goTypes,
		DependencyIndexes: file_api_statApp_proto_depIdxs,
		MessageInfos:      file_api_statApp_proto_msgTypes,
	}.Build()
	File_api_statApp_proto = out.File
	file_api_statApp_proto_rawDesc = nil
	file_api_statApp_proto_goTypes = nil
	file_api_statApp_proto_depIdxs = nil
}
